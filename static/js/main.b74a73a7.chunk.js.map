{"version":3,"sources":["helpers/fontAwesome.js","components/request-components/RequestItem.js","components/request-components/RequestsContainer.js","components/form-components/Form.js","components/form-components/FormsContainer.js","components/EmptyDataset.js","components/Loading.js","App.js","index.js"],"names":["library","add","faBriefcase","RequestItem","value","title","handleSelection","activeClass","isItemSelected","className","onClick","icon","RequestsContainer","data","requestName","map","item","key","Form","props","state","representative","textInput","handleChange","bind","handleSubmit","event","name","target","this","setState","preventDefault","handleFormSubmit","requestNum","isSelected","onSubmit","type","placeholder","onChange","Component","FormsContainer","EmptyDataset","Loading","App","useState","setData","setRequestName","setIsItemSelected","loading","setLoading","selectedItem","objCopy","JSON","parse","stringify","Number","parseInt","useEffect","fetch","then","response","json","requestID","dataType","arr","newObj","index","createObj","length","filteredData","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b74a73a7.chunk.js","sourcesContent":["  import { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport {\r\n  faBriefcase\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(faBriefcase);","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport '../../helpers/fontAwesome';\r\n\r\nconst RequestItem = ({ value, title, handleSelection, isItemSelected }) => {\r\n    const activeClass = isItemSelected[value] === true ? \"request-item__active\" : null\r\n    \r\n    function handleClick() {\r\n        handleSelection(value)\r\n    } \r\n\r\n    return (\r\n        <div className={activeClass + \" request-item\"} onClick={handleClick}>\r\n            <div className=\"request-item__image\">\r\n                <FontAwesomeIcon className=\"request-item__briefcase\" icon={['fas', 'briefcase']} />\r\n            </div>\r\n            <div className=\"request-item__text\">\r\n                <div className=\"request-item__title\">{title}</div>\r\n                <div className=\"request-item__value\">{value}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestItem\r\n","import React from 'react'\r\nimport RequestItem from './RequestItem'\r\n\r\nconst RequestsContainer = ({ data, requestName, handleSelection, isItemSelected }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"requests-list-containter\">\r\n            {\r\n                data.map(item => <RequestItem \r\n                                    key={item} \r\n                                    value={item} \r\n                                    title={requestName} \r\n                                    handleSelection={handleSelection} \r\n                                    isItemSelected={isItemSelected} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsContainer\r\n","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            representative: '',\r\n            textInput: ''\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        const name = event.target.name\r\n        const value = event.target.value\r\n\r\n        this.setState({[name]: value})\r\n      }\r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.props.handleFormSubmit(this.props.requestNum)\r\n      }\r\n    \r\n      render() {\r\n        const isSelected = this.props.isItemSelected[this.props.requestNum] === true ? \"form_show\" : \"form_hide\"\r\n        const requestNum = this.props.requestNum\r\n        const representative = this.state.representative\r\n        const textInput = this.state.textInput\r\n\r\n        return (\r\n          <form className={isSelected + \" form-component\"} onSubmit={this.handleSubmit}>\r\n            <div className=\"form-component__element form-component__title\">Обращение № {requestNum}</div>\r\n            <br />\r\n            <input className=\"form-component__element input\" type=\"text\" name=\"representative\" value={representative} placeholder=\"Представитель\" onChange={this.handleChange} />\r\n            <br />\r\n            <textarea className=\"form-component__element textarea\" name=\"textInput\" value={textInput} placeholder=\"Суть обращения\" onChange={this.handleChange} />\r\n            <br />\r\n            <input className=\"form-component__element button\" type=\"submit\" value=\"Отправить\" />\r\n          </form>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport Form from './Form'\r\n\r\nconst FormsContainer = ({ data, handleFormSubmit, isItemSelected }) => {\r\n    return (\r\n        <div className=\"forms-container\">\r\n            {\r\n                data.map(item => <Form key={item} requestNum={item} handleFormSubmit={handleFormSubmit} isItemSelected={isItemSelected} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormsContainer","import React from 'react'\r\n\r\nconst EmptyDataset = () => {\r\n    return (\r\n        <div className=\"empty-dataset-window\">\r\n            <div className=\"empty-dataset-window__message\">Список обращений пуст</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyDataset\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading-window\">\r\n            <h1 className=\"loading-window__message\">Загрузка...</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, {useState, useEffect} from 'react';\nimport './styles/main.scss';\n\nimport RequestsList from './components/request-components/RequestsContainer'\nimport FormsContainer from \"./components/form-components/FormsContainer\"\nimport EmptyDataset from \"./components/EmptyDataset\"\nimport Loading from \"./components/Loading\"\n\nfunction App() {\n  const DATA_LINK = 'https://d76afe3b-6e74-4da7-b7ac-fff456f1bb50.mock.pstmn.io/data'\n  \n  const [data, setData] = useState([])\n  const [requestName, setRequestName] = useState()\n  const [isItemSelected, setIsItemSelected] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    fetch(DATA_LINK)\n      .then(response => response.json())\n      .then(json => {\n        setData(json.requestID)\n        setRequestName(json.dataType)\n        setIsItemSelected(createObj(json.requestID))\n        setLoading(false)\n      })\n  }, [])\n\n  useEffect(() => {\n    if (data.length > 0) {\n      handleSelection(data[0])\n    }\n  }, [data])\n\n  function createObj (arr) {\n    let newObj = {}\n    arr.map((item, index) => index === 0 ? newObj[item] = true : newObj[item] = false)\n    return newObj\n  }\n\n  function handleSelection(selectedItem) {\n    const objCopy = JSON.parse(JSON.stringify(isItemSelected))\n    for (let item in objCopy) {\n      Number.parseInt(item) === selectedItem \n        ? objCopy[item] = true \n        : objCopy[item] = false\n    }\n    setIsItemSelected(objCopy)\n  }\n\n  function handleFormSubmit(requestNum) {\n    const filteredData = data.filter(item => item !== requestNum)\n    setData(filteredData)\n  }\n\n  if (loading === false && data.length !== 0) {\n    return (\n      <div className=\"main-window\">\n        <RequestsList data={data} requestName={requestName} handleSelection={handleSelection} isItemSelected={isItemSelected} />\n        <FormsContainer data={data} handleFormSubmit={handleFormSubmit} isItemSelected={isItemSelected} />\n      </div>\n    );\n  } else if (loading === false && data.length === 0) {\n    return <EmptyDataset />\n  } else {\n    return <Loading />\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}